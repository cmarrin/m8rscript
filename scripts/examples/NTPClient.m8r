//
// Clock.m8r
//
// Simple Clock object to get the current time from an NTP server and give it back
//
// By default 'time.nist.gov' is used, but any time server
// (hostname or ip) can be passed in. A callback function 
// is also passed to the constructor, which is called with an Object
// containing: year, month, date, hours, minutes, seconds, dst
//
// Time is in UTC. The DAYTIME protocol is actually used on port 13

class Clock
{
	var _host = "time.nist.gov";
	var _port = 13;
	var year, month, day, hour, minute, second, dst;
	var _server;
	
	constructor(host, port) {
		if (host && host != "") {
			_host = host;
		}
		if (port && port > 0 && port < 32768) {
			_port = port;
		}
	}
	
	function fetchTime(func) {
		var eventFunc = function(socket, event, connectionId, dataValue) {
			println("TCP server got event " + event);
			switch(event) {
				case TCP.Error: {
					println("***** TCP Error: " + dataValue + ", error=" + connectionId);
				}
				case TCP.ReceivedData: {
					dataValue = dataValue.trim();
					println("Received DAYTIME string: " + dataValue);
					var array = dataValue.split(" ", true);
					
					var dateArray = array[1].split("-");
					year = toInt(dateArray[0]);
					month = toInt(dateArray[1]);
					day = toInt(dateArray[2]);
					
					var timeArray = array[2].split(":");
					hour = toInt(timeArray[0]);
					minute = toInt(timeArray[1]);
					second = toInt(timeArray[2]);
					
					dst = toInt(array[3]) >= 50;
					func();
				}
			}
		};
		
		IPAddr.lookupHostname(_host, function(name, ip) {
			println("Looked up " + name + ", got " + ip);
			if (ip) {
				println("Creating TCP server to port " + _port);
				_server = new TCP(ip, _port, eventFunc);
			}
		});
	}
}

var current = new Clock();
current.fetchTime(function() {
	var isPM = false;
	var hr = current.hour;
	if (hr > 12) {
		isPM = true;
		hr -= 12;
	}
 
    // FIXME: Need formatting
	//printf("\nIt is currently %d:%02d:%02d%s UCT on %d/%d/%d. It is%s daylight savings time\n\n",
	println("\nIt is currently " + hr + ":" + current.minute + ":" + current.second + 
            (current.second, isPM ? "pm" : "am") + " UCT on " + 
            current.month + "/" + current.day + "/" + current.year + 
            ". It is" + (current.dst ? "" : " not") + " daylight savings time\n");
});
		
		
		
