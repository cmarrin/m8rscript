// Tests of the Iterator object

var obj2 = [ 1, 2, 3 ];

class Iterator {
    var _obj;
    var _index;
    constructor(obj) { _obj = obj; _index = 0; }
    function done() { return _index >= _obj.length; }
    function next() { if (!done()) ++_index; }
    function getValue() { return done() ? null : _obj[_index]; }
    function setValue(v) { if (!done()) _obj[_index] = v; }
};

obj2.iterator = Iterator;

println("1) Hand crafted iterator");
println("    Original array: " + obj2);
for (var it : obj2) {
var it;
	it.value *= 2;
}
println("    Array doubled : " + obj2);

var obj = [ 1, 2, 3 ];

println("\n2) Double array object");
println("    Original array: " + obj);
for (var it : obj) {
	it.value *= 2;
}
println("    Array doubled : " + obj);

var n = 0;
for (var it : obj) {
	n += it.value;
}

println("\n3)  Iterate array using implicit iteration: total (s/b) 12) = " + n);

var n = 0;
for (var it = new Iterator(obj); !it.done(); it.next()) {
	n += it.value;
}

println("3a) Same test using Iterator object: total (s/b) 12) = " + n);

var n = 0;
var it;
for (it = new Iterator(obj); !it.done(); it.next()) {
	n += it.value;
}

println("3b) Same test with iterator value defined outside for loop: total (s/b) 12) = " + n);
