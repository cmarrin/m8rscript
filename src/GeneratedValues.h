// This file is generated. Do not edit

#pragma once

#include <cstdint>
#include "Atom.h"

namespace m8rscript {

enum class SA : uint16_t {
    Array = 0,
    Base64 = 1,
    BothEdges = 2,
    Connected = 3,
    Directory = 4,
    Disconnected = 5,
    Error = 6,
    FS = 7,
    FallingEdge = 8,
    File = 9,
    GPIO = 10,
    Global = 11,
    High = 12,
    IPAddr = 13,
    Input = 14,
    InputPulldown = 15,
    InputPullup = 16,
    Iterator = 17,
    JSON = 18,
    Low = 19,
    MaxConnections = 20,
    None = 21,
    Object = 22,
    Once = 23,
    Output = 24,
    OutputOpenDrain = 25,
    PinMode = 26,
    ReceivedData = 27,
    Reconnected = 28,
    Repeating = 29,
    RisingEdge = 30,
    SentData = 31,
    TCP = 32,
    TCPProto = 33,
    Task = 34,
    Timer = 35,
    Trigger = 36,
    UDP = 37,
    UDPProto = 38,
    __destructor = 39,
    __impl = 40,
    __index = 41,
    __nativeObject = 42,
    __object = 43,
    arguments = 44,
    back = 45,
    call = 46,
    close = 47,
    consoleListener = 48,
    constructor = 49,
    currentTime = 50,
    decode = 51,
    delay = 52,
    digitalRead = 53,
    digitalWrite = 54,
    disconnect = 55,
    done = 56,
    encode = 57,
    env = 58,
    eof = 59,
    error = 60,
    errorString = 61,
    format = 62,
    front = 63,
    getValue = 64,
    import = 65,
    importString = 66,
    iterator = 67,
    join = 68,
    lastError = 69,
    length = 70,
    lookupHostname = 71,
    makeDirectory = 72,
    meminfo = 73,
    mount = 74,
    mounted = 75,
    name = 76,
    next = 77,
    null = 78,
    onInterrupt = 79,
    open = 80,
    openDirectory = 81,
    parse = 82,
    pop_back = 83,
    pop_front = 84,
    print = 85,
    printf = 86,
    println = 87,
    push_back = 88,
    push_front = 89,
    read = 90,
    remove = 91,
    rename = 92,
    run = 93,
    seek = 94,
    send = 95,
    setPinMode = 96,
    setValue = 97,
    size = 98,
    split = 99,
    start = 100,
    stat = 101,
    stop = 102,
    stringify = 103,
    toFloat = 104,
    toInt = 105,
    toString = 106,
    toUInt = 107,
    trim = 108,
    type = 109,
    undefined = 110,
    unmount = 111,
    valid = 112,
    value = 113,
    waitForEvent = 114,
    write = 115,
};

const char** sharedAtoms(uint16_t& nelts);
const char* specialChars();
static inline m8r::Atom SAtom(SA sa) { return m8r::Atom(static_cast<m8r::Atom::value_type>(sa)); }

}
